<header> - <assert.h>
<preprocessor directive> - #include
<header> - <stdbool.h>
<preprocessor directive> - #include
<preprocessor directive> - #include
<string literal> - "nvim/arglist.h"
<preprocessor directive> - #include
<string literal> - "nvim/buffer.h"
<preprocessor directive> - #include
<string literal> - "nvim/charset.h"
<preprocessor directive> - #include
<string literal> - "nvim/eval.h"
<preprocessor directive> - #include
<string literal> - "nvim/ex_cmds.h"
<preprocessor directive> - #include
<string literal> - "nvim/ex_cmds2.h"
<preprocessor directive> - #include
<string literal> - "nvim/ex_getln.h"
<preprocessor directive> - #include
<string literal> - "nvim/fileio.h"
<preprocessor directive> - #include
<string literal> - "nvim/garray.h"
<preprocessor directive> - #include
<string literal> - "nvim/globals.h"
<preprocessor directive> - #include
<string literal> - "nvim/mark.h"
<preprocessor directive> - #include
<string literal> - "nvim/memory.h"
<preprocessor directive> - #include
<string literal> - "nvim/os/input.h"
<preprocessor directive> - #include
<string literal> - "nvim/path.h"
<preprocessor directive> - #include
<string literal> - "nvim/regexp.h"
<preprocessor directive> - #include
<string literal> - "nvim/strings.h"
<preprocessor directive> - #include
<string literal> - "nvim/undo.h"
<preprocessor directive> - #include
<string literal> - "nvim/version.h"
<preprocessor directive> - #include
<string literal> - "nvim/vim.h"
<preprocessor directive> - #include
<string literal> - "nvim/window.h"
<keyword> - typedef
<keyword> - struct
<punctuation> - {
<identifier> - alist_T
<identifier> - alist
<operator> - *
<punctuation> - ;
<keyword> - int
<identifier> - had_tab
<punctuation> - ;
<keyword> - bool
<identifier> - keep_tabs
<punctuation> - ;
<keyword> - bool
<identifier> - forceit
<punctuation> - ;
<keyword> - bool
<identifier> - use_firstwin
<punctuation> - ;
<identifier> - uint8_t
<identifier> - opened
<operator> - *
<punctuation> - ;
<keyword> - int
<identifier> - opened_len
<punctuation> - ;
<keyword> - new
<identifier> - win_T
<identifier> - _curwin
<operator> - *
<punctuation> - ;
<keyword> - new
<identifier> - tabpage_T
<identifier> - _curtab
<operator> - *
<punctuation> - ;
<identifier> - arg_all_state_T
<punctuation> - }
<punctuation> - ;
<preprocessor directive> - #ifdef
<identifier> - INCLUDE_GENERATED_DECLARATIONS
<string literal> - "arglist.c.generated.h"
<identifier> - include
<punctuation> - #
<error> - #endif
<keyword> - static
<keyword> - char
<identifier> - e_cannot_change_arglist_recursively
<punctuation> - [
<punctuation> - ]
<string literal> - "E1156: Cannot change the argument list recursively"
<identifier> - N_
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - enum
<punctuation> - {
<identifier> - AL_SET
<number> - 1
<operator> - =
<punctuation> - ,
<identifier> - AL_ADD
<number> - 2
<operator> - =
<punctuation> - ,
<identifier> - AL_DEL
<number> - 3
<operator> - =
<punctuation> - ,
<punctuation> - }
<punctuation> - ;
<keyword> - static
<keyword> - bool
<keyword> - false
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<keyword> - static
<keyword> - int
<keyword> - void
<identifier> - check_arglist_locked
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - arglist_locked
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - emsg
<identifier> - _
<identifier> - e_cannot_change_arglist_recursively
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - return
<identifier> - FAIL
<punctuation> - ;
<punctuation> - }
<keyword> - return
<identifier> - OK
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - alist_clear
<identifier> - alist_T
<identifier> - al
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - check_arglist_locked
<identifier> - FAIL
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<preprocessor directive> - #define
<identifier> - FREE_AENTRY_FNAME
<identifier> - arg
<identifier> - xfree
<identifier> - arg
<identifier> - ae_fname
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<identifier> - GA_DEEP_CLEAR
<identifier> - al
<identifier> - al_ga
<identifier> - aentry_T
<identifier> - FREE_AENTRY_FNAME
<operator> - &
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - alist_init
<identifier> - alist_T
<identifier> - al
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - int
<keyword> - sizeof
<identifier> - ga_init
<identifier> - al
<identifier> - al_ga
<identifier> - aentry_T
<number> - 5
<operator> - &
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - ,
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - alist_unlink
<identifier> - alist_T
<identifier> - al
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - al
<identifier> - global_alist
<identifier> - al
<identifier> - al_refcount
<number> - 0
<operator> - !=
<operator> - &
<operator> - &&
<operator> - -
<operator> - -
<operator> - -
<operator> - >
<operator> - <=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - alist_clear
<identifier> - al
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<identifier> - xfree
<identifier> - al
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - void
<keyword> - new
<keyword> - void
<identifier> - alist_
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - sizeof
<identifier> - curwin
<identifier> - w_alist
<identifier> - xmalloc
<identifier> - curwin
<identifier> - w_alist
<operator> - -
<operator> - >
<operator> - =
<operator> - *
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<identifier> - curwin
<identifier> - w_alist
<identifier> - al_refcount
<number> - 1
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<identifier> - curwin
<identifier> - w_alist
<identifier> - id
<identifier> - max_alist_id
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - =
<operator> - +
<operator> - +
<punctuation> - ;
<identifier> - alist_init
<identifier> - curwin
<identifier> - w_alist
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<preprocessor directive> - #if
<identifier> - defined
<identifier> - UNIX
<operator> - !
<punctuation> - (
<punctuation> - )
<keyword> - void
<identifier> - alist_expand
<identifier> - int
<identifier> - fnum_list
<identifier> - int
<identifier> - fnum_len
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - char
<identifier> - save_p_su
<identifier> - p_su
<operator> - *
<operator> - =
<punctuation> - ;
<keyword> - char
<keyword> - sizeof
<identifier> - old_arg_files
<identifier> - xmalloc
<identifier> - old_arg_files
<identifier> - GARGCOUNT
<operator> - *
<operator> - *
<operator> - =
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<identifier> - p_su
<identifier> - empty_option
<operator> - =
<punctuation> - ;
<keyword> - for
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - GARGCOUNT
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<identifier> - old_arg_files
<identifier> - i
<identifier> - xstrdup
<identifier> - GARGLIST
<identifier> - i
<identifier> - ae_fname
<operator> - =
<punctuation> - [
<punctuation> - ]
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - int
<identifier> - old_arg_count
<identifier> - GARGCOUNT
<operator> - =
<punctuation> - ;
<keyword> - char
<keyword> - new
<identifier> - _arg_files
<operator> - *
<operator> - *
<punctuation> - ;
<keyword> - int
<keyword> - new
<identifier> - _arg_file_count
<punctuation> - ;
<keyword> - if
<identifier> - expand_wildcards
<identifier> - old_arg_count
<identifier> - old_arg_files
<punctuation> - (
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<keyword> - new
<keyword> - new
<identifier> - _arg_file_count
<identifier> - _arg_files
<operator> - &
<operator> - &
<punctuation> - ,
<punctuation> - ,
<identifier> - EW_FILE
<identifier> - EW_NOTFOUND
<identifier> - EW_ADDSLASH
<identifier> - EW_NOERROR
<identifier> - OK
<operator> - |
<operator> - |
<operator> - |
<operator> - ==
<punctuation> - )
<keyword> - new
<identifier> - _arg_file_count
<number> - 0
<operator> - &&
<operator> - >
<punctuation> - )
<punctuation> - {
<keyword> - new
<keyword> - new
<identifier> - alist_set
<identifier> - global_alist
<identifier> - _arg_file_count
<identifier> - _arg_files
<operator> - &
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<keyword> - true
<identifier> - fnum_list
<identifier> - fnum_len
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<identifier> - FreeWild
<identifier> - old_arg_count
<identifier> - old_arg_files
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<identifier> - p_su
<identifier> - save_p_su
<operator> - =
<punctuation> - ;
<punctuation> - }
<error> - #endif
<keyword> - void
<keyword> - int
<keyword> - char
<keyword> - int
<keyword> - int
<keyword> - int
<identifier> - alist_set
<identifier> - alist_T
<identifier> - al
<identifier> - count
<identifier> - files
<identifier> - use_curbuf
<identifier> - fnum_list
<identifier> - fnum_len
<operator> - *
<operator> - *
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - check_arglist_locked
<identifier> - FAIL
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<identifier> - alist_clear
<identifier> - al
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<identifier> - ga_grow
<identifier> - al
<identifier> - al_ga
<identifier> - count
<operator> - &
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - {
<keyword> - for
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - count
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - if
<keyword> - int
<identifier> - got_
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - while
<identifier> - i
<identifier> - count
<operator> - <
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - xfree
<identifier> - files
<identifier> - i
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - break
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - fnum_list
<identifier> - NULL
<identifier> - i
<identifier> - fnum_len
<operator> - !=
<operator> - &&
<operator> - <
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<identifier> - buf_set_name
<identifier> - fnum_list
<identifier> - i
<identifier> - files
<identifier> - i
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - ,
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<keyword> - false
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<punctuation> - }
<identifier> - alist_add
<identifier> - al
<identifier> - files
<identifier> - i
<identifier> - use_curbuf
<number> - 2
<number> - 1
<operator> - :
<punctuation> - (
<punctuation> - ,
<punctuation> - [
<punctuation> - ]
<punctuation> - ,
<punctuation> - ?
<punctuation> - )
<punctuation> - ;
<identifier> - os_breakcheck
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<identifier> - xfree
<identifier> - files
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - al
<identifier> - global_alist
<operator> - ==
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - false
<identifier> - arg_had_last
<operator> - =
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - void
<keyword> - char
<keyword> - int
<identifier> - alist_add
<identifier> - alist_T
<identifier> - al
<identifier> - fname
<identifier> - set_fnum
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - fname
<identifier> - NULL
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - check_arglist_locked
<identifier> - FAIL
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - true
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<preprocessor directive> - #ifdef
<identifier> - BACKSLASH_IN_FILENAME
<identifier> - slash_adjust
<identifier> - fname
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<error> - #endif
<identifier> - AARGLIST
<identifier> - al
<identifier> - al
<identifier> - al_ga
<identifier> - ga_len
<identifier> - ae_fname
<identifier> - fname
<operator> - -
<operator> - >
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - .
<punctuation> - ]
<punctuation> - .
<punctuation> - ;
<keyword> - if
<identifier> - set_fnum
<number> - 0
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - AARGLIST
<identifier> - al
<identifier> - al
<identifier> - al_ga
<identifier> - ga_len
<identifier> - ae_fnum
<operator> - -
<operator> - >
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - .
<punctuation> - ]
<punctuation> - .
<identifier> - buflist_add
<identifier> - fname
<identifier> - BLN_LISTED
<identifier> - set_fnum
<identifier> - BLN_CURBUF
<number> - 2
<number> - 0
<operator> - |
<operator> - ==
<operator> - :
<punctuation> - (
<punctuation> - ,
<punctuation> - (
<punctuation> - ?
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<identifier> - al
<identifier> - al_ga
<identifier> - ga_len
<operator> - -
<operator> - >
<operator> - +
<operator> - +
<punctuation> - .
<punctuation> - ;
<keyword> - false
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<punctuation> - }
<preprocessor directive> - #if
<identifier> - defined
<identifier> - BACKSLASH_IN_FILENAME
<punctuation> - (
<punctuation> - )
<keyword> - void
<keyword> - void
<identifier> - alist_slash_adjust
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - for
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - GARGCOUNT
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - GARGLIST
<identifier> - i
<identifier> - ae_fname
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - {
<identifier> - slash_adjust
<identifier> - GARGLIST
<identifier> - i
<identifier> - ae_fname
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<identifier> - FOR_ALL_TAB_WINDOWS
<identifier> - tp
<identifier> - wp
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - wp
<identifier> - w_alist
<identifier> - global_alist
<operator> - -
<operator> - >
<operator> - !=
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - for
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - WARGCOUNT
<identifier> - wp
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - WARGLIST
<identifier> - wp
<identifier> - i
<identifier> - ae_fname
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - {
<identifier> - slash_adjust
<identifier> - WARGLIST
<identifier> - wp
<identifier> - i
<identifier> - ae_fname
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<punctuation> - }
<punctuation> - }
<error> - #endif
<keyword> - static
<keyword> - char
<keyword> - do
<keyword> - char
<identifier> - _one_arg
<identifier> - str
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - char
<identifier> - p
<operator> - *
<punctuation> - ;
<keyword> - bool
<identifier> - inbacktick
<punctuation> - ;
<keyword> - false
<identifier> - inbacktick
<operator> - =
<punctuation> - ;
<keyword> - for
<identifier> - p
<identifier> - str
<identifier> - str
<identifier> - str
<operator> - =
<operator> - *
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - rem_backslash
<identifier> - str
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - p
<identifier> - str
<operator> - *
<operator> - +
<operator> - +
<operator> - =
<operator> - *
<operator> - +
<operator> - +
<punctuation> - ;
<identifier> - p
<identifier> - str
<operator> - *
<operator> - +
<operator> - +
<operator> - =
<operator> - *
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - if
<identifier> - inbacktick
<identifier> - ascii_isspace
<identifier> - str
<operator> - !
<operator> - &&
<operator> - *
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - break
<punctuation> - ;
<punctuation> - }
<single character> - '`'
<keyword> - if
<identifier> - str
<operator> - *
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - inbacktick
<operator> - ^
<operator> - =
<punctuation> - ;
<punctuation> - }
<identifier> - p
<identifier> - str
<operator> - *
<operator> - +
<operator> - +
<operator> - =
<operator> - *
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<identifier> - str
<identifier> - skipwhite
<identifier> - str
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<identifier> - p
<identifier> - NUL
<operator> - *
<operator> - =
<punctuation> - ;
<keyword> - return
<identifier> - str
<punctuation> - ;
<punctuation> - }
<keyword> - static
<keyword> - void
<keyword> - char
<keyword> - int
<identifier> - get_arglist
<identifier> - garray_T
<identifier> - gap
<identifier> - str
<identifier> - escaped
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - int
<keyword> - sizeof
<keyword> - char
<identifier> - ga_init
<identifier> - gap
<number> - 20
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - while
<identifier> - str
<identifier> - NUL
<operator> - *
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - char
<identifier> - GA_APPEND
<identifier> - gap
<identifier> - str
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - escaped
<operator> - !
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - do
<identifier> - str
<identifier> - _one_arg
<identifier> - str
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - int
<keyword> - char
<keyword> - int
<keyword> - char
<keyword> - bool
<identifier> - get_arglist_exp
<identifier> - str
<identifier> - fcountp
<identifier> - fnamesp
<identifier> - wig
<operator> - *
<operator> - *
<operator> - *
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<identifier> - garray_T
<identifier> - ga
<punctuation> - ;
<keyword> - int
<identifier> - i
<punctuation> - ;
<keyword> - true
<identifier> - get_arglist
<identifier> - ga
<identifier> - str
<operator> - &
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - wig
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - i
<identifier> - expand_wildcards
<identifier> - ga
<identifier> - ga_len
<identifier> - ga
<identifier> - ga_data
<operator> - =
<punctuation> - (
<punctuation> - .
<punctuation> - ,
<punctuation> - .
<punctuation> - ,
<identifier> - fcountp
<identifier> - fnamesp
<identifier> - EW_FILE
<identifier> - EW_NOTFOUND
<identifier> - EW_NOTWILD
<operator> - |
<operator> - |
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<identifier> - i
<identifier> - gen_expand_wildcards
<identifier> - ga
<identifier> - ga_len
<identifier> - ga
<identifier> - ga_data
<operator> - =
<punctuation> - (
<punctuation> - .
<punctuation> - ,
<punctuation> - .
<punctuation> - ,
<identifier> - fcountp
<identifier> - fnamesp
<identifier> - EW_FILE
<identifier> - EW_NOTFOUND
<identifier> - EW_NOTWILD
<operator> - |
<operator> - |
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<identifier> - ga_clear
<identifier> - ga
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - return
<identifier> - i
<punctuation> - ;
<punctuation> - }
<keyword> - static
<keyword> - void
<keyword> - void
<identifier> - alist_check_arg_idx
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - FOR_ALL_TAB_WINDOWS
<identifier> - tp
<identifier> - win
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - win
<identifier> - w_alist
<identifier> - curwin
<identifier> - w_alist
<operator> - -
<operator> - >
<operator> - ==
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - check_arg_idx
<identifier> - win
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - static
<keyword> - void
<keyword> - int
<keyword> - char
<keyword> - int
<keyword> - bool
<identifier> - alist_add_list
<identifier> - count
<identifier> - files
<identifier> - after
<identifier> - will_edit
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<identifier> - FUNC_ATTR_NONNULL_ALL
<punctuation> - {
<keyword> - int
<identifier> - old_argcount
<identifier> - ARGCOUNT
<operator> - =
<punctuation> - ;
<identifier> - ga_grow
<identifier> - ALIST
<identifier> - curwin
<identifier> - al_ga
<identifier> - count
<operator> - &
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - check_arglist_locked
<identifier> - FAIL
<operator> - !=
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - after
<number> - 0
<operator> - <
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - after
<number> - 0
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - after
<identifier> - ARGCOUNT
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - after
<identifier> - ARGCOUNT
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - after
<identifier> - ARGCOUNT
<operator> - <
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - memmove
<identifier> - ARGLIST
<identifier> - after
<identifier> - count
<identifier> - ARGLIST
<identifier> - after
<operator> - &
<operator> - +
<operator> - &
<punctuation> - (
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<keyword> - sizeof
<identifier> - size_t
<identifier> - ARGCOUNT
<identifier> - after
<identifier> - aentry_T
<operator> - -
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - true
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<keyword> - for
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - count
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - const
<keyword> - int
<identifier> - flags
<identifier> - BLN_LISTED
<identifier> - will_edit
<identifier> - BLN_CURBUF
<number> - 0
<operator> - =
<operator> - |
<operator> - :
<punctuation> - (
<punctuation> - ?
<punctuation> - )
<punctuation> - ;
<identifier> - ARGLIST
<identifier> - after
<identifier> - i
<identifier> - ae_fname
<identifier> - files
<identifier> - i
<operator> - +
<operator> - =
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - [
<punctuation> - ]
<punctuation> - ;
<identifier> - ARGLIST
<identifier> - after
<identifier> - i
<identifier> - ae_fnum
<identifier> - buflist_add
<identifier> - files
<identifier> - i
<identifier> - flags
<operator> - +
<operator> - =
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - false
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<identifier> - ALIST
<identifier> - curwin
<identifier> - al_ga
<identifier> - ga_len
<identifier> - count
<operator> - -
<operator> - >
<operator> - +
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - .
<punctuation> - ;
<keyword> - if
<identifier> - old_argcount
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - after
<number> - 0
<operator> - >
<operator> - &&
<operator> - -
<operator> - >
<operator> - >=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - count
<operator> - -
<operator> - >
<operator> - +
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - return
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - static
<keyword> - void
<identifier> - arglist_del_files
<identifier> - garray_T
<identifier> - alist_ga
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - regmatch_T
<identifier> - regmatch
<punctuation> - ;
<identifier> - regmatch
<identifier> - rm_ic
<identifier> - p_fic
<operator> - =
<punctuation> - .
<punctuation> - ;
<header> - < alist_ga->
<keyword> - for
<keyword> - int
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - ga_len
<identifier> - got_
<identifier> - i
<number> - 0
<operator> - =
<operator> - &&
<operator> - !
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - char
<keyword> - char
<identifier> - p
<identifier> - alist_ga
<identifier> - ga_data
<identifier> - i
<operator> - *
<operator> - =
<operator> - *
<operator> - *
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - ;
<keyword> - false
<identifier> - p
<identifier> - file_pat_to_reg_pat
<identifier> - p
<identifier> - NULL
<identifier> - NULL
<operator> - =
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - p
<identifier> - NULL
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - break
<punctuation> - ;
<punctuation> - }
<identifier> - regmatch
<identifier> - regprog
<identifier> - vim_regcomp
<identifier> - p
<identifier> - p_magic
<identifier> - RE_MAGIC
<number> - 0
<operator> - =
<operator> - :
<punctuation> - .
<punctuation> - (
<punctuation> - ,
<punctuation> - ?
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - regmatch
<identifier> - regprog
<identifier> - NULL
<operator> - ==
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - {
<identifier> - xfree
<identifier> - p
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - break
<punctuation> - ;
<punctuation> - }
<keyword> - bool
<identifier> - didone
<identifier> - false
<operator> - =
<punctuation> - ;
<keyword> - for
<keyword> - int
<identifier> - match
<identifier> - match
<identifier> - ARGCOUNT
<identifier> - match
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - vim_regexec
<identifier> - regmatch
<identifier> - alist_name
<identifier> - ARGLIST
<identifier> - match
<identifier> - colnr_T
<number> - 0
<operator> - &
<operator> - &
<punctuation> - (
<punctuation> - (
<punctuation> - ,
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - didone
<identifier> - true
<operator> - =
<punctuation> - ;
<identifier> - xfree
<identifier> - ARGLIST
<identifier> - match
<identifier> - ae_fname
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<identifier> - memmove
<identifier> - ARGLIST
<identifier> - match
<identifier> - ARGLIST
<identifier> - match
<number> - 1
<operator> - +
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<keyword> - sizeof
<identifier> - size_t
<identifier> - ARGCOUNT
<identifier> - match
<identifier> - aentry_T
<number> - 1
<operator> - -
<operator> - -
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<identifier> - ALIST
<identifier> - curwin
<identifier> - al_ga
<identifier> - ga_len
<operator> - -
<operator> - >
<operator> - -
<operator> - -
<punctuation> - (
<punctuation> - )
<punctuation> - .
<punctuation> - ;
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - match
<operator> - -
<operator> - >
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - curwin
<identifier> - w_arg_idx
<operator> - -
<operator> - >
<operator> - -
<operator> - -
<punctuation> - ;
<punctuation> - }
<identifier> - match
<operator> - -
<operator> - -
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<identifier> - vim_regfree
<identifier> - regmatch
<identifier> - regprog
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<identifier> - xfree
<identifier> - p
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - didone
<operator> - !
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - char
<identifier> - semsg
<identifier> - _
<identifier> - e_nomatch2
<identifier> - alist_ga
<identifier> - ga_data
<identifier> - i
<operator> - *
<operator> - *
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<identifier> - ga_clear
<identifier> - alist_ga
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - static
<keyword> - int
<keyword> - do
<keyword> - char
<keyword> - int
<keyword> - int
<keyword> - bool
<identifier> - _arglist
<identifier> - str
<identifier> - what
<identifier> - after
<identifier> - will_edit
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<identifier> - FUNC_ATTR_NONNULL_ALL
<punctuation> - {
<keyword> - new
<identifier> - garray_T
<identifier> - _ga
<punctuation> - ;
<keyword> - int
<identifier> - exp_count
<punctuation> - ;
<keyword> - char
<identifier> - exp_files
<operator> - *
<operator> - *
<punctuation> - ;
<keyword> - int
<keyword> - true
<identifier> - arg_escaped
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - check_arglist_locked
<identifier> - FAIL
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<identifier> - FAIL
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - what
<identifier> - AL_ADD
<identifier> - str
<identifier> - NUL
<operator> - ==
<operator> - &&
<operator> - *
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - curbuf
<identifier> - b_ffname
<identifier> - NULL
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - return
<identifier> - FAIL
<punctuation> - ;
<punctuation> - }
<identifier> - str
<identifier> - curbuf
<identifier> - b_fname
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<keyword> - false
<identifier> - arg_escaped
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - new
<identifier> - get_arglist
<identifier> - _ga
<identifier> - str
<identifier> - arg_escaped
<operator> - &
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - what
<identifier> - AL_DEL
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - new
<identifier> - arglist_del_files
<identifier> - _ga
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - int
<identifier> - i
<identifier> - expand_wildcards
<identifier> - new_ga
<identifier> - ga_len
<identifier> - new_ga
<identifier> - ga_data
<operator> - =
<punctuation> - (
<punctuation> - .
<punctuation> - ,
<punctuation> - .
<punctuation> - ,
<identifier> - exp_count
<identifier> - exp_files
<operator> - &
<operator> - &
<punctuation> - ,
<punctuation> - ,
<identifier> - EW_DIR
<identifier> - EW_FILE
<identifier> - EW_ADDSLASH
<identifier> - EW_NOTFOUND
<operator> - |
<operator> - |
<operator> - |
<punctuation> - )
<punctuation> - ;
<keyword> - new
<identifier> - ga_clear
<identifier> - _ga
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - i
<identifier> - FAIL
<identifier> - exp_count
<number> - 0
<operator> - ==
<operator> - |
<operator> - |
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - emsg
<identifier> - _
<identifier> - e_nomatch
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - return
<identifier> - FAIL
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - what
<identifier> - AL_ADD
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - alist_add_list
<identifier> - exp_count
<identifier> - exp_files
<identifier> - after
<identifier> - will_edit
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<identifier> - xfree
<identifier> - exp_files
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<identifier> - assert
<identifier> - what
<identifier> - AL_SET
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<identifier> - alist_set
<identifier> - ALIST
<identifier> - curwin
<identifier> - exp_count
<identifier> - exp_files
<identifier> - will_edit
<identifier> - NULL
<number> - 0
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<identifier> - alist_check_arg_idx
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - return
<identifier> - OK
<punctuation> - ;
<punctuation> - }
<keyword> - void
<keyword> - char
<identifier> - set_arglist
<identifier> - str
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - do
<keyword> - false
<identifier> - _arglist
<identifier> - str
<identifier> - AL_SET
<number> - 0
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - bool
<identifier> - editing_arg_idx
<identifier> - win_T
<identifier> - win
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - return
<identifier> - win
<identifier> - w_arg_idx
<identifier> - WARGCOUNT
<identifier> - win
<operator> - !
<operator> - -
<operator> - >
<operator> - >=
<punctuation> - (
<punctuation> - (
<punctuation> - )
<identifier> - win
<identifier> - w_buffer
<identifier> - b_fnum
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<punctuation> - (
<identifier> - WARGLIST
<identifier> - win
<identifier> - win
<identifier> - w_arg_idx
<identifier> - ae_fnum
<operator> - !=
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<identifier> - win
<identifier> - w_buffer
<identifier> - b_ffname
<identifier> - NULL
<operator> - &&
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<identifier> - path_full_compare
<identifier> - alist_name
<identifier> - WARGLIST
<identifier> - win
<identifier> - win
<identifier> - w_arg_idx
<operator> - |
<operator> - |
<operator> - !
<operator> - &
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<keyword> - true
<identifier> - win
<identifier> - w_buffer
<identifier> - b_ffname
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<punctuation> - ,
<punctuation> - ,
<keyword> - true
<identifier> - kEqualFiles
<operator> - &
<punctuation> - )
<punctuation> - )
<punctuation> - )
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - check_arg_idx
<identifier> - win_T
<identifier> - win
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - WARGCOUNT
<identifier> - win
<identifier> - editing_arg_idx
<identifier> - win
<number> - 1
<operator> - >
<operator> - &&
<operator> - !
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - win
<identifier> - w_arg_idx_invalid
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - win
<identifier> - w_arg_idx
<identifier> - WARGCOUNT
<identifier> - win
<number> - 1
<operator> - -
<operator> - >
<operator> - !=
<operator> - -
<punctuation> - (
<punctuation> - (
<punctuation> - )
<keyword> - false
<identifier> - arg_had_last
<operator> - &&
<operator> - ==
<identifier> - ALIST
<identifier> - win
<identifier> - global_alist
<operator> - &&
<operator> - ==
<operator> - &
<punctuation> - (
<punctuation> - )
<identifier> - GARGCOUNT
<number> - 0
<operator> - &&
<operator> - >
<identifier> - win
<identifier> - w_arg_idx
<identifier> - GARGCOUNT
<operator> - &&
<operator> - -
<operator> - >
<operator> - <
<identifier> - win
<identifier> - w_buffer
<identifier> - b_fnum
<identifier> - GARGLIST
<identifier> - GARGCOUNT
<identifier> - ae_fnum
<number> - 1
<operator> - &&
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - ==
<operator> - -
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<identifier> - win
<identifier> - w_buffer
<identifier> - b_ffname
<identifier> - NULL
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<identifier> - path_full_compare
<identifier> - alist_name
<identifier> - GARGLIST
<identifier> - GARGCOUNT
<number> - 1
<operator> - &&
<operator> - &
<operator> - -
<punctuation> - (
<punctuation> - (
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<keyword> - true
<keyword> - true
<identifier> - win
<identifier> - w_buffer
<identifier> - b_ffname
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<identifier> - kEqualFiles
<operator> - &
<punctuation> - )
<punctuation> - )
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - arg_had_last
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - false
<identifier> - win
<identifier> - w_arg_idx_invalid
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - win
<identifier> - w_arg_idx
<identifier> - WARGCOUNT
<identifier> - win
<identifier> - win
<identifier> - w_alist
<identifier> - global_alist
<number> - 1
<operator> - -
<operator> - >
<operator> - ==
<operator> - -
<operator> - &&
<operator> - -
<operator> - >
<operator> - ==
<operator> - &
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - arg_had_last
<operator> - =
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - ex_args
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - eap
<identifier> - cmdidx
<identifier> - CMD_args
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - check_arglist_locked
<identifier> - FAIL
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<identifier> - alist_unlink
<identifier> - ALIST
<identifier> - curwin
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - eap
<identifier> - cmdidx
<identifier> - CMD_argglobal
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - ALIST
<identifier> - curwin
<identifier> - global_alist
<operator> - =
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - new
<identifier> - alist_
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - if
<identifier> - eap
<identifier> - arg
<identifier> - NUL
<operator> - *
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - check_arglist_locked
<identifier> - FAIL
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<identifier> - ex_next
<identifier> - eap
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - eap
<identifier> - cmdidx
<identifier> - CMD_args
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - ARGCOUNT
<number> - 0
<operator> - <=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - char
<keyword> - sizeof
<keyword> - char
<identifier> - items
<identifier> - xmalloc
<identifier> - size_t
<identifier> - ARGCOUNT
<operator> - *
<operator> - *
<operator> - =
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<identifier> - gotocmdline
<identifier> - true
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - for
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - ARGCOUNT
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<identifier> - items
<identifier> - i
<identifier> - alist_name
<identifier> - ARGLIST
<identifier> - i
<operator> - =
<operator> - &
<punctuation> - [
<punctuation> - ]
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<identifier> - list_in_columns
<identifier> - items
<identifier> - ARGCOUNT
<identifier> - curwin
<identifier> - w_arg_idx
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<identifier> - xfree
<identifier> - items
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - eap
<identifier> - cmdidx
<identifier> - CMD_arglocal
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - garray_T
<identifier> - gap
<identifier> - curwin
<identifier> - w_alist
<identifier> - al_ga
<operator> - *
<operator> - =
<operator> - &
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<punctuation> - ;
<identifier> - ga_grow
<identifier> - gap
<identifier> - GARGCOUNT
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - for
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - GARGCOUNT
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - GARGLIST
<identifier> - i
<identifier> - ae_fname
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - {
<identifier> - AARGLIST
<identifier> - curwin
<identifier> - w_alist
<identifier> - gap
<identifier> - ga_len
<identifier> - ae_fname
<identifier> - xstrdup
<identifier> - GARGLIST
<identifier> - i
<identifier> - ae_fname
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<identifier> - AARGLIST
<identifier> - curwin
<identifier> - w_alist
<identifier> - gap
<identifier> - ga_len
<identifier> - ae_fnum
<identifier> - GARGLIST
<identifier> - i
<identifier> - ae_fnum
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - ;
<identifier> - gap
<identifier> - ga_len
<operator> - -
<operator> - >
<operator> - +
<operator> - +
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - ex_previous
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<keyword> - int
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - eap
<identifier> - line2
<identifier> - ARGCOUNT
<operator> - -
<operator> - >
<operator> - -
<operator> - -
<operator> - >
<operator> - >=
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - do
<identifier> - _argfile
<identifier> - eap
<identifier> - ARGCOUNT
<number> - 1
<operator> - -
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - do
<keyword> - int
<identifier> - _argfile
<identifier> - eap
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - eap
<identifier> - line2
<operator> - -
<operator> - >
<operator> - -
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - ,
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - ex_rewind
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - do
<identifier> - _argfile
<identifier> - eap
<number> - 0
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - ex_last
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - do
<identifier> - _argfile
<identifier> - eap
<identifier> - ARGCOUNT
<number> - 1
<operator> - -
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - ex_argument
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - i
<punctuation> - ;
<keyword> - if
<identifier> - eap
<identifier> - addr_count
<number> - 0
<operator> - -
<operator> - >
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - i
<identifier> - eap
<identifier> - line2
<number> - 1
<operator> - =
<operator> - -
<operator> - >
<operator> - -
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<identifier> - i
<identifier> - curwin
<identifier> - w_arg_idx
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<punctuation> - }
<keyword> - do
<identifier> - _argfile
<identifier> - eap
<identifier> - i
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - void
<keyword> - do
<keyword> - int
<identifier> - _argfile
<identifier> - exarg_T
<identifier> - eap
<identifier> - argn
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - other
<punctuation> - ;
<keyword> - char
<identifier> - p
<operator> - *
<punctuation> - ;
<keyword> - int
<identifier> - old_arg_idx
<identifier> - curwin
<identifier> - w_arg_idx
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<header> - < 0 || argn >
<keyword> - if
<identifier> - argn
<identifier> - ARGCOUNT
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - ARGCOUNT
<number> - 1
<operator> - <=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<string literal> - "E163: There is only one file to edit"
<identifier> - emsg
<identifier> - _
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - argn
<number> - 0
<operator> - <
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<string literal> - "E164: Cannot go before first file"
<identifier> - emsg
<identifier> - _
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<string literal> - "E165: Cannot go beyond last file"
<identifier> - emsg
<identifier> - _
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - else
<punctuation> - }
<punctuation> - {
<identifier> - setpcmark
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<single character> - 's'
<keyword> - if
<identifier> - eap
<identifier> - cmd
<identifier> - cmdmod
<identifier> - cmod_tab
<number> - 0
<operator> - *
<operator> - -
<operator> - >
<operator> - ==
<operator> - |
<operator> - |
<operator> - !=
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - win_split
<identifier> - FAIL
<number> - 0
<number> - 0
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<identifier> - RESET_BINDING
<identifier> - curwin
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - true
<identifier> - other
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - buf_hide
<identifier> - curbuf
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - p
<identifier> - fix_fname
<identifier> - alist_name
<identifier> - ARGLIST
<identifier> - argn
<operator> - =
<operator> - &
<punctuation> - (
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<identifier> - other
<identifier> - otherfile
<identifier> - p
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<identifier> - xfree
<identifier> - p
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - buf_hide
<identifier> - curbuf
<identifier> - other
<operator> - !
<operator> - |
<operator> - |
<operator> - !
<punctuation> - (
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<identifier> - check_changed
<identifier> - curbuf
<identifier> - CCGD_AW
<operator> - &&
<punctuation> - (
<punctuation> - ,
<identifier> - other
<identifier> - CCGD_MULTWIN
<number> - 0
<operator> - |
<operator> - :
<punctuation> - (
<punctuation> - ?
<punctuation> - )
<identifier> - eap
<identifier> - forceit
<identifier> - CCGD_FORCEIT
<number> - 0
<operator> - |
<operator> - -
<operator> - >
<operator> - :
<punctuation> - (
<punctuation> - ?
<punctuation> - )
<identifier> - CCGD_EXCMD
<operator> - |
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - argn
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - argn
<identifier> - ARGCOUNT
<identifier> - curwin
<identifier> - w_alist
<identifier> - global_alist
<number> - 1
<operator> - ==
<operator> - -
<operator> - &&
<operator> - -
<operator> - >
<operator> - ==
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - arg_had_last
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - if
<keyword> - do
<identifier> - _ecmd
<identifier> - alist_name
<identifier> - ARGLIST
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - NULL
<number> - 0
<operator> - &
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - ,
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<punctuation> - ,
<identifier> - eap
<identifier> - ECMD_LAST
<punctuation> - ,
<punctuation> - ,
<identifier> - buf_hide
<identifier> - curwin
<identifier> - w_buffer
<identifier> - ECMD_HIDE
<number> - 0
<operator> - -
<operator> - >
<operator> - :
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - ?
<punctuation> - )
<identifier> - eap
<identifier> - forceit
<identifier> - ECMD_FORCEIT
<identifier> - curwin
<identifier> - FAIL
<number> - 0
<operator> - +
<operator> - -
<operator> - >
<operator> - :
<operator> - ==
<punctuation> - (
<punctuation> - ?
<punctuation> - )
<punctuation> - ,
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - old_arg_idx
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - eap
<identifier> - cmdidx
<identifier> - CMD_argdo
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<single character> - '\'
<identifier> - setmark
<punctuation> - (
<punctuation> - '
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - ex_next
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - i
<punctuation> - ;
<keyword> - if
<identifier> - buf_hide
<identifier> - curbuf
<punctuation> - (
<punctuation> - (
<punctuation> - )
<identifier> - eap
<identifier> - cmdidx
<identifier> - CMD_snext
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - ==
<identifier> - check_changed
<identifier> - curbuf
<identifier> - CCGD_AW
<operator> - |
<operator> - |
<operator> - !
<punctuation> - (
<punctuation> - ,
<identifier> - eap
<identifier> - forceit
<identifier> - CCGD_FORCEIT
<number> - 0
<operator> - |
<operator> - -
<operator> - >
<operator> - :
<punctuation> - (
<punctuation> - ?
<punctuation> - )
<identifier> - CCGD_EXCMD
<operator> - |
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - eap
<identifier> - arg
<identifier> - NUL
<operator> - *
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<keyword> - do
<keyword> - true
<identifier> - _arglist
<identifier> - eap
<identifier> - arg
<identifier> - AL_SET
<identifier> - FAIL
<number> - 0
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<identifier> - i
<number> - 0
<operator> - =
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - int
<identifier> - i
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - eap
<identifier> - line2
<operator> - =
<operator> - -
<operator> - >
<operator> - +
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - do
<identifier> - _argfile
<identifier> - eap
<identifier> - i
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - ex_argdedupe
<identifier> - exarg_T
<identifier> - eap
<identifier> - FUNC_ATTR_UNUSED
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - for
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - ARGCOUNT
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - for
<keyword> - int
<identifier> - j
<identifier> - i
<identifier> - j
<identifier> - ARGCOUNT
<identifier> - j
<number> - 1
<operator> - =
<operator> - +
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - path_fnamecmp
<identifier> - ARGLIST
<identifier> - i
<identifier> - ae_fname
<identifier> - ARGLIST
<identifier> - j
<identifier> - ae_fname
<number> - 0
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - ,
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - xfree
<identifier> - ARGLIST
<identifier> - j
<identifier> - ae_fname
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<identifier> - memmove
<identifier> - ARGLIST
<identifier> - j
<identifier> - ARGLIST
<identifier> - j
<number> - 1
<operator> - +
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<keyword> - sizeof
<identifier> - size_t
<identifier> - ARGCOUNT
<identifier> - j
<identifier> - aentry_T
<number> - 1
<operator> - -
<operator> - -
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<identifier> - ARGCOUNT
<operator> - -
<operator> - -
<punctuation> - ;
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - j
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - i
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - j
<operator> - -
<operator> - >
<operator> - >
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - curwin
<identifier> - w_arg_idx
<operator> - -
<operator> - >
<operator> - -
<operator> - -
<punctuation> - ;
<punctuation> - }
<identifier> - j
<operator> - -
<operator> - -
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - ex_argedit
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - int
<keyword> - int
<identifier> - i
<identifier> - eap
<identifier> - addr_count
<identifier> - eap
<identifier> - line2
<identifier> - curwin
<identifier> - w_arg_idx
<number> - 1
<operator> - =
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - :
<operator> - -
<operator> - >
<operator> - +
<punctuation> - ?
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - bool
<identifier> - curbuf_is_reusable
<identifier> - curbuf_reusable
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<keyword> - do
<keyword> - true
<identifier> - _arglist
<identifier> - eap
<identifier> - arg
<identifier> - AL_ADD
<identifier> - i
<identifier> - FAIL
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<identifier> - maketitle
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<number> - 0
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<identifier> - curbuf
<identifier> - b_ml
<identifier> - ml_flags
<identifier> - ML_EMPTY
<operator> - &&
<operator> - -
<operator> - >
<operator> - &
<punctuation> - (
<punctuation> - .
<punctuation> - )
<identifier> - curbuf
<identifier> - b_ffname
<identifier> - NULL
<identifier> - curbuf_is_reusable
<operator> - &&
<operator> - -
<operator> - >
<operator> - ==
<operator> - |
<operator> - |
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - i
<number> - 0
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - i
<identifier> - ARGCOUNT
<operator> - <
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - do
<identifier> - _argfile
<identifier> - eap
<identifier> - i
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - ex_argadd
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - do
<identifier> - _arglist
<identifier> - eap
<identifier> - arg
<identifier> - AL_ADD
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<keyword> - int
<identifier> - eap
<identifier> - addr_count
<identifier> - eap
<identifier> - line2
<identifier> - curwin
<identifier> - w_arg_idx
<number> - 0
<number> - 1
<operator> - -
<operator> - >
<operator> - >
<operator> - -
<operator> - >
<operator> - :
<operator> - -
<operator> - >
<operator> - +
<punctuation> - ?
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<keyword> - false
<punctuation> - )
<punctuation> - ;
<identifier> - maketitle
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - ex_argdelete
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - check_arglist_locked
<identifier> - FAIL
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - eap
<identifier> - addr_count
<identifier> - eap
<identifier> - arg
<identifier> - NUL
<number> - 0
<operator> - -
<operator> - >
<operator> - >
<operator> - |
<operator> - |
<operator> - *
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - eap
<identifier> - addr_count
<number> - 0
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - ARGCOUNT
<operator> - -
<operator> - >
<operator> - >=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<string literal> - "E610: No argument to delete"
<identifier> - emsg
<identifier> - _
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - return
<punctuation> - ;
<punctuation> - }
<identifier> - eap
<identifier> - line1
<identifier> - eap
<identifier> - line2
<identifier> - curwin
<identifier> - w_arg_idx
<number> - 1
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<operator> - >
<operator> - +
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - eap
<identifier> - line2
<identifier> - ARGCOUNT
<operator> - -
<operator> - >
<operator> - >
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - eap
<identifier> - line2
<identifier> - ARGCOUNT
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<punctuation> - }
<identifier> - linenr_T
<identifier> - n
<identifier> - eap
<identifier> - line2
<identifier> - eap
<identifier> - line1
<number> - 1
<operator> - =
<operator> - -
<operator> - >
<operator> - -
<operator> - -
<operator> - >
<operator> - +
<punctuation> - ;
<keyword> - if
<identifier> - eap
<identifier> - arg
<identifier> - NUL
<operator> - *
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - emsg
<identifier> - _
<identifier> - e_invarg
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - n
<number> - 0
<operator> - <=
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - eap
<identifier> - line1
<identifier> - eap
<identifier> - line2
<number> - 1
<number> - 0
<operator> - -
<operator> - >
<operator> - !=
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - emsg
<identifier> - _
<identifier> - e_invrange
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - else
<punctuation> - }
<punctuation> - {
<header> - <= eap->
<keyword> - for
<identifier> - linenr_T
<identifier> - i
<identifier> - eap
<identifier> - line1
<identifier> - i
<identifier> - line2
<identifier> - i
<operator> - =
<operator> - -
<operator> - >
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<identifier> - xfree
<identifier> - ARGLIST
<identifier> - i
<identifier> - ae_fname
<number> - 1
<operator> - -
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<identifier> - memmove
<identifier> - ARGLIST
<identifier> - eap
<identifier> - line1
<identifier> - ARGLIST
<identifier> - eap
<identifier> - line2
<number> - 1
<operator> - +
<operator> - -
<operator> - >
<operator> - -
<operator> - +
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<keyword> - sizeof
<identifier> - size_t
<identifier> - ARGCOUNT
<identifier> - eap
<identifier> - line2
<identifier> - aentry_T
<operator> - -
<operator> - -
<operator> - >
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - int
<identifier> - ALIST
<identifier> - curwin
<identifier> - al_ga
<identifier> - ga_len
<identifier> - n
<operator> - -
<operator> - >
<operator> - -
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - .
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - eap
<identifier> - line2
<operator> - -
<operator> - >
<operator> - >=
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - n
<operator> - -
<operator> - >
<operator> - -
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - eap
<identifier> - line1
<operator> - -
<operator> - >
<operator> - >
<operator> - -
<operator> - >
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - eap
<identifier> - line1
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - ARGCOUNT
<number> - 0
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - curwin
<identifier> - w_arg_idx
<number> - 0
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - ARGCOUNT
<operator> - -
<operator> - >
<operator> - >=
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - ARGCOUNT
<number> - 1
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - do
<keyword> - false
<identifier> - _arglist
<identifier> - eap
<identifier> - arg
<identifier> - AL_DEL
<number> - 0
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<identifier> - maketitle
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - char
<identifier> - get_arglist_name
<identifier> - expand_T
<identifier> - xp
<identifier> - FUNC_ATTR_UNUSED
<identifier> - int
<identifier> - idx
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - idx
<identifier> - ARGCOUNT
<operator> - >=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - return
<identifier> - NULL
<punctuation> - ;
<punctuation> - }
<keyword> - return
<identifier> - alist_name
<identifier> - ARGLIST
<identifier> - idx
<operator> - &
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - char
<identifier> - alist_name
<identifier> - aentry_T
<identifier> - aep
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - buf_T
<identifier> - bp
<operator> - *
<punctuation> - ;
<identifier> - bp
<identifier> - buflist_findnr
<identifier> - aep
<identifier> - ae_fnum
<operator> - =
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - bp
<identifier> - NULL
<identifier> - bp
<identifier> - b_fname
<identifier> - NULL
<operator> - ==
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - return
<identifier> - aep
<identifier> - ae_fname
<operator> - -
<operator> - >
<punctuation> - ;
<punctuation> - }
<keyword> - return
<identifier> - bp
<identifier> - b_fname
<operator> - -
<operator> - >
<punctuation> - ;
<punctuation> - }
<keyword> - static
<keyword> - void
<identifier> - arg_all_close_unused_windows
<identifier> - arg_all_state_T
<identifier> - aall
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - win_T
<identifier> - old_curwin
<identifier> - curwin
<operator> - *
<operator> - =
<punctuation> - ;
<identifier> - tabpage_T
<identifier> - old_curtab
<identifier> - curtab
<operator> - *
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - aall
<identifier> - had_tab
<number> - 0
<operator> - -
<operator> - >
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - goto
<keyword> - true
<keyword> - true
<identifier> - _tabpage_tp
<identifier> - first_tabpage
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - for
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<identifier> - win_T
<identifier> - wpnext
<identifier> - NULL
<operator> - *
<operator> - =
<punctuation> - ;
<identifier> - tabpage_T
<identifier> - tpnext
<identifier> - curtab
<identifier> - tp_next
<operator> - *
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<keyword> - for
<identifier> - win_T
<identifier> - wp
<identifier> - firstwin
<identifier> - wp
<identifier> - NULL
<identifier> - wp
<identifier> - wpnext
<operator> - *
<operator> - =
<operator> - !=
<operator> - =
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - i
<punctuation> - ;
<identifier> - wpnext
<identifier> - wp
<identifier> - w_next
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<identifier> - buf_T
<identifier> - buf
<identifier> - wp
<identifier> - w_buffer
<operator> - *
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<keyword> - if
<identifier> - buf
<identifier> - b_ffname
<identifier> - NULL
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<identifier> - aall
<identifier> - keep_tabs
<identifier> - buf
<identifier> - b_nwindows
<identifier> - wp
<identifier> - w_width
<identifier> - Columns
<number> - 1
<operator> - |
<operator> - |
<operator> - !
<operator> - -
<operator> - >
<operator> - &&
<operator> - -
<operator> - >
<operator> - >
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - i
<identifier> - aall
<identifier> - opened_len
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<header> - < aall->
<keyword> - for
<identifier> - i
<identifier> - i
<identifier> - opened_len
<identifier> - i
<number> - 0
<operator> - =
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<header> - < aall->
<keyword> - if
<identifier> - i
<identifier> - alist
<identifier> - al_ga
<identifier> - ga_len
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - .
<identifier> - AARGLIST
<identifier> - aall
<identifier> - alist
<identifier> - i
<identifier> - ae_fnum
<identifier> - buf
<identifier> - b_fnum
<operator> - &&
<operator> - -
<operator> - >
<operator> - ==
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<identifier> - path_full_compare
<identifier> - alist_name
<identifier> - AARGLIST
<identifier> - aall
<identifier> - alist
<identifier> - i
<operator> - |
<operator> - |
<operator> - &
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<identifier> - buf
<identifier> - b_ffname
<operator> - -
<operator> - >
<punctuation> - ,
<keyword> - true
<keyword> - true
<identifier> - kEqualFiles
<operator> - &
<punctuation> - ,
<punctuation> - )
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - weight
<number> - 1
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - old_curtab
<identifier> - curtab
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - weight
<operator> - +
<operator> - +
<punctuation> - ;
<keyword> - if
<identifier> - old_curwin
<identifier> - wp
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - weight
<operator> - +
<operator> - +
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - if
<keyword> - int
<identifier> - weight
<identifier> - aall
<identifier> - opened
<identifier> - i
<operator> - >
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - {
<identifier> - aall
<identifier> - opened
<identifier> - i
<identifier> - uint8_t
<identifier> - weight
<operator> - -
<operator> - >
<operator> - =
<punctuation> - [
<punctuation> - ]
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - i
<number> - 0
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<keyword> - new
<identifier> - aall
<identifier> - _curwin
<identifier> - NULL
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - new
<identifier> - aall
<identifier> - _curwin
<identifier> - w_arg_idx
<identifier> - aall
<identifier> - opened_len
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<punctuation> - }
<keyword> - new
<identifier> - aall
<identifier> - _curwin
<identifier> - wp
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - new
<identifier> - aall
<identifier> - _curtab
<identifier> - curtab
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - else
<keyword> - if
<identifier> - aall
<identifier> - keep_tabs
<operator> - -
<operator> - >
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - i
<identifier> - aall
<identifier> - opened_len
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - wp
<identifier> - w_alist
<identifier> - aall
<identifier> - alist
<operator> - -
<operator> - >
<operator> - !=
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - alist_unlink
<identifier> - wp
<identifier> - w_alist
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<identifier> - wp
<identifier> - w_alist
<identifier> - aall
<identifier> - alist
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<operator> - >
<punctuation> - ;
<identifier> - wp
<identifier> - w_alist
<identifier> - al_refcount
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - +
<operator> - +
<punctuation> - ;
<punctuation> - }
<keyword> - break
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<identifier> - wp
<identifier> - w_arg_idx
<identifier> - i
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - i
<identifier> - aall
<identifier> - opened_len
<identifier> - aall
<identifier> - keep_tabs
<operator> - ==
<operator> - -
<operator> - >
<operator> - &&
<operator> - !
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - buf_hide
<identifier> - buf
<identifier> - aall
<identifier> - forceit
<identifier> - buf
<identifier> - b_nwindows
<number> - 1
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - )
<identifier> - bufIsChanged
<identifier> - buf
<operator> - |
<operator> - |
<operator> - !
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - buf_hide
<identifier> - buf
<identifier> - buf
<identifier> - b_nwindows
<identifier> - bufIsChanged
<identifier> - buf
<number> - 1
<operator> - !
<operator> - &&
<operator> - -
<operator> - >
<operator> - <=
<operator> - &&
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - bufref_T
<identifier> - bufref
<punctuation> - ;
<identifier> - set_bufref
<identifier> - bufref
<identifier> - buf
<operator> - &
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - void
<identifier> - autowrite
<identifier> - buf
<identifier> - false
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - win_valid
<identifier> - wp
<identifier> - bufref_valid
<identifier> - bufref
<operator> - !
<operator> - |
<operator> - |
<operator> - !
<operator> - &
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - wpnext
<identifier> - firstwin
<operator> - =
<punctuation> - ;
<keyword> - continue
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - if
<identifier> - ONE_WINDOW
<punctuation> - (
<identifier> - first_tabpage
<identifier> - tp_next
<identifier> - NULL
<identifier> - aall
<identifier> - had_tab
<operator> - &&
<operator> - -
<operator> - >
<operator> - ==
<operator> - |
<operator> - |
<operator> - !
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - aall
<identifier> - use_firstwin
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - false
<identifier> - win_close
<identifier> - wp
<identifier> - buf_hide
<identifier> - buf
<identifier> - bufIsChanged
<identifier> - buf
<operator> - !
<operator> - &&
<operator> - !
<punctuation> - (
<punctuation> - ,
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - win_valid
<identifier> - wpnext
<operator> - !
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - wpnext
<identifier> - firstwin
<operator> - =
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - if
<identifier> - aall
<identifier> - had_tab
<identifier> - tpnext
<identifier> - NULL
<number> - 0
<operator> - -
<operator> - >
<operator> - ==
<operator> - |
<operator> - |
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - break
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - valid_tabpage
<identifier> - tpnext
<operator> - !
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - tpnext
<identifier> - first_tabpage
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - goto
<keyword> - true
<keyword> - true
<identifier> - _tabpage_tp
<identifier> - tpnext
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - static
<keyword> - void
<identifier> - arg_all_open_windows
<identifier> - arg_all_state_T
<identifier> - aall
<identifier> - int
<identifier> - count
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - bool
<identifier> - tab_drop_empty_window
<identifier> - false
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - aall
<identifier> - keep_tabs
<identifier> - buf_is_empty
<identifier> - curbuf
<identifier> - curbuf
<identifier> - b_nwindows
<number> - 1
<operator> - -
<operator> - >
<operator> - &&
<operator> - &&
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<identifier> - curbuf
<identifier> - b_ffname
<identifier> - NULL
<identifier> - curbuf
<identifier> - b_changed
<operator> - &&
<operator> - -
<operator> - >
<operator> - ==
<operator> - &&
<operator> - !
<operator> - -
<operator> - >
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - aall
<identifier> - use_firstwin
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<identifier> - tab_drop_empty_window
<identifier> - true
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - int
<identifier> - split_ret
<identifier> - OK
<operator> - =
<punctuation> - ;
<keyword> - for
<keyword> - int
<keyword> - int
<identifier> - i
<identifier> - i
<identifier> - count
<identifier> - got_
<identifier> - i
<number> - 0
<operator> - =
<operator> - <
<operator> - &&
<operator> - !
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - aall
<identifier> - alist
<identifier> - global_alist
<identifier> - i
<identifier> - global_alist
<identifier> - al_ga
<identifier> - ga_len
<number> - 1
<operator> - -
<operator> - >
<operator> - ==
<operator> - &
<operator> - &&
<operator> - ==
<operator> - -
<punctuation> - (
<punctuation> - .
<punctuation> - .
<punctuation> - )
<punctuation> - {
<keyword> - true
<identifier> - arg_had_last
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - aall
<identifier> - opened
<identifier> - i
<number> - 0
<operator> - -
<operator> - >
<operator> - >
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - i
<operator> - -
<operator> - >
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - FOR_ALL_WINDOWS_IN_TAB
<identifier> - wp
<identifier> - curtab
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - wp
<identifier> - w_arg_idx
<identifier> - i
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - aall
<identifier> - keep_tabs
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - new
<identifier> - aall
<identifier> - _curwin
<identifier> - wp
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - new
<identifier> - aall
<identifier> - _curtab
<identifier> - curtab
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - wp
<identifier> - w_frame
<identifier> - fr_parent
<identifier> - curwin
<identifier> - w_frame
<identifier> - fr_parent
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - !=
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<string literal> - "E249: window layout changed unexpectedly"
<identifier> - emsg
<identifier> - _
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<identifier> - i
<identifier> - count
<operator> - =
<punctuation> - ;
<keyword> - break
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<identifier> - win_move_after
<identifier> - wp
<identifier> - curwin
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - break
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - else
<keyword> - if
<identifier> - split_ret
<identifier> - OK
<operator> - ==
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - tab_drop_empty_window
<identifier> - i
<identifier> - count
<number> - 1
<operator> - &&
<operator> - ==
<operator> - -
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - autocmd_no_enter
<operator> - -
<operator> - -
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - aall
<identifier> - use_firstwin
<operator> - !
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - bool
<identifier> - p_ea_save
<identifier> - p_ea
<operator> - =
<punctuation> - ;
<keyword> - true
<identifier> - p_ea
<operator> - =
<punctuation> - ;
<identifier> - split_ret
<identifier> - win_split
<identifier> - WSP_ROOM
<identifier> - WSP_BELOW
<number> - 0
<operator> - =
<operator> - |
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<identifier> - p_ea
<identifier> - p_ea_save
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - split_ret
<identifier> - FAIL
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - continue
<punctuation> - ;
<punctuation> - }
<keyword> - else
<punctuation> - }
<punctuation> - {
<identifier> - autocmd_no_leave
<operator> - -
<operator> - -
<punctuation> - ;
<punctuation> - }
<identifier> - curwin
<identifier> - w_arg_idx
<identifier> - i
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - if
<identifier> - i
<number> - 0
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - new
<identifier> - aall
<identifier> - _curwin
<identifier> - curwin
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<keyword> - new
<identifier> - aall
<identifier> - _curtab
<identifier> - curtab
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - void
<keyword> - do
<identifier> - _ecmd
<identifier> - alist_name
<identifier> - AARGLIST
<identifier> - aall
<identifier> - alist
<identifier> - i
<identifier> - NULL
<identifier> - NULL
<identifier> - ECMD_ONE
<number> - 0
<operator> - &
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - ,
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<punctuation> - ,
<identifier> - buf_hide
<identifier> - curwin
<identifier> - w_buffer
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - (
<punctuation> - (
<punctuation> - )
<identifier> - bufIsChanged
<identifier> - curwin
<identifier> - w_buffer
<identifier> - ECMD_HIDE
<identifier> - ECMD_OLDBUF
<number> - 0
<operator> - |
<operator> - |
<operator> - -
<operator> - >
<operator> - :
<operator> - +
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ?
<punctuation> - )
<punctuation> - ,
<identifier> - curwin
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - tab_drop_empty_window
<identifier> - i
<identifier> - count
<number> - 1
<operator> - &&
<operator> - ==
<operator> - -
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - autocmd_no_enter
<operator> - +
<operator> - +
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - aall
<identifier> - use_firstwin
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - autocmd_no_leave
<operator> - +
<operator> - +
<punctuation> - ;
<punctuation> - }
<keyword> - false
<identifier> - aall
<identifier> - use_firstwin
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<punctuation> - }
<identifier> - os_breakcheck
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - aall
<identifier> - had_tab
<identifier> - tabpage_index
<identifier> - NULL
<identifier> - p_tpm
<number> - 0
<operator> - -
<operator> - >
<operator> - >
<operator> - &&
<operator> - <=
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - cmdmod
<identifier> - cmod_tab
<number> - 9999
<operator> - =
<punctuation> - .
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - static
<keyword> - void
<keyword> - do
<keyword> - int
<keyword> - int
<identifier> - _arg_all
<identifier> - count
<identifier> - forceit
<identifier> - int
<identifier> - keep_tabs
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<identifier> - win_T
<identifier> - last_curwin
<operator> - *
<punctuation> - ;
<identifier> - tabpage_T
<identifier> - last_curtab
<operator> - *
<punctuation> - ;
<keyword> - bool
<identifier> - prev_arglist_locked
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<identifier> - assert
<identifier> - firstwin
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - cmdwin_type
<number> - 0
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - emsg
<identifier> - _
<identifier> - e_cmdwin
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - ARGCOUNT
<number> - 0
<operator> - <=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - return
<punctuation> - ;
<punctuation> - }
<identifier> - setpcmark
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<identifier> - arg_all_state_T
<identifier> - aall
<operator> - =
<punctuation> - {
<keyword> - false
<identifier> - use_firstwin
<operator> - =
<punctuation> - .
<punctuation> - ,
<identifier> - had_tab
<identifier> - cmdmod
<identifier> - cmod_tab
<operator> - =
<punctuation> - .
<punctuation> - .
<punctuation> - ,
<keyword> - new
<identifier> - _curwin
<identifier> - NULL
<operator> - =
<punctuation> - .
<punctuation> - ,
<keyword> - new
<identifier> - _curtab
<identifier> - NULL
<operator> - =
<punctuation> - .
<punctuation> - ,
<identifier> - forceit
<identifier> - forceit
<operator> - =
<punctuation> - .
<punctuation> - ,
<identifier> - keep_tabs
<identifier> - keep_tabs
<operator> - =
<punctuation> - .
<punctuation> - ,
<identifier> - opened_len
<identifier> - ARGCOUNT
<operator> - =
<punctuation> - .
<punctuation> - ,
<identifier> - opened
<identifier> - xcalloc
<identifier> - size_t
<identifier> - ARGCOUNT
<number> - 1
<operator> - =
<punctuation> - .
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<punctuation> - )
<punctuation> - ,
<punctuation> - }
<punctuation> - ;
<identifier> - aall
<identifier> - alist
<identifier> - curwin
<identifier> - w_alist
<operator> - =
<operator> - -
<operator> - >
<punctuation> - .
<punctuation> - ;
<identifier> - aall
<identifier> - alist
<identifier> - al_refcount
<operator> - -
<operator> - >
<operator> - +
<operator> - +
<punctuation> - .
<punctuation> - ;
<keyword> - true
<identifier> - arglist_locked
<operator> - =
<punctuation> - ;
<identifier> - arg_all_close_unused_windows
<identifier> - aall
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - count
<identifier> - aall
<identifier> - opened_len
<identifier> - count
<number> - 0
<operator> - >
<operator> - |
<operator> - |
<operator> - <=
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - {
<identifier> - count
<identifier> - aall
<identifier> - opened_len
<operator> - =
<punctuation> - .
<punctuation> - ;
<punctuation> - }
<identifier> - autocmd_no_enter
<operator> - +
<operator> - +
<punctuation> - ;
<identifier> - autocmd_no_leave
<operator> - +
<operator> - +
<punctuation> - ;
<identifier> - last_curwin
<identifier> - curwin
<operator> - =
<punctuation> - ;
<identifier> - last_curtab
<identifier> - curtab
<operator> - =
<punctuation> - ;
<keyword> - false
<identifier> - win_enter
<identifier> - lastwin
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<identifier> - arg_all_open_windows
<identifier> - aall
<identifier> - count
<operator> - &
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<identifier> - alist_unlink
<identifier> - aall
<identifier> - alist
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<identifier> - arglist_locked
<identifier> - prev_arglist_locked
<operator> - =
<punctuation> - ;
<identifier> - autocmd_no_enter
<operator> - -
<operator> - -
<punctuation> - ;
<keyword> - if
<keyword> - new
<identifier> - last_curtab
<identifier> - aall
<identifier> - _curtab
<operator> - !=
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - valid_tabpage
<identifier> - last_curtab
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - goto
<keyword> - true
<keyword> - true
<identifier> - _tabpage_tp
<identifier> - last_curtab
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - win_valid
<identifier> - last_curwin
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - false
<identifier> - win_enter
<identifier> - last_curwin
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - if
<keyword> - new
<identifier> - valid_tabpage
<identifier> - aall
<identifier> - _curtab
<punctuation> - (
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - goto
<keyword> - new
<keyword> - true
<keyword> - true
<identifier> - _tabpage_tp
<identifier> - aall
<identifier> - _curtab
<punctuation> - (
<punctuation> - .
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - if
<keyword> - new
<identifier> - win_valid
<identifier> - aall
<identifier> - _curwin
<punctuation> - (
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - )
<punctuation> - {
<keyword> - new
<keyword> - false
<identifier> - win_enter
<identifier> - aall
<identifier> - _curwin
<punctuation> - (
<punctuation> - .
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<identifier> - autocmd_no_leave
<operator> - -
<operator> - -
<punctuation> - ;
<identifier> - xfree
<identifier> - aall
<identifier> - opened
<punctuation> - (
<punctuation> - .
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - ex_all
<identifier> - exarg_T
<identifier> - eap
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - eap
<identifier> - addr_count
<number> - 0
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - eap
<identifier> - line2
<number> - 9999
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<punctuation> - }
<keyword> - do
<keyword> - int
<identifier> - _arg_all
<identifier> - eap
<identifier> - line2
<identifier> - eap
<identifier> - forceit
<identifier> - eap
<identifier> - cmdidx
<identifier> - CMD_drop
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<operator> - ==
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - char
<keyword> - void
<identifier> - arg_all
<operator> - *
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - char
<identifier> - retval
<identifier> - NULL
<operator> - *
<operator> - =
<punctuation> - ;
<keyword> - for
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - int
<identifier> - len
<number> - 0
<operator> - =
<punctuation> - ;
<keyword> - for
<keyword> - int
<identifier> - idx
<identifier> - idx
<identifier> - ARGCOUNT
<identifier> - idx
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<keyword> - char
<identifier> - p
<identifier> - alist_name
<identifier> - ARGLIST
<identifier> - idx
<operator> - *
<operator> - =
<operator> - &
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - p
<identifier> - NULL
<operator> - ==
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - continue
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - len
<number> - 0
<operator> - >
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - retval
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<single character> - ' '
<identifier> - retval
<identifier> - len
<operator> - =
<punctuation> - [
<punctuation> - ]
<punctuation> - ;
<punctuation> - }
<identifier> - len
<operator> - +
<operator> - +
<punctuation> - ;
<punctuation> - }
<keyword> - for
<identifier> - p
<identifier> - NUL
<identifier> - p
<operator> - *
<operator> - !=
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<single character> - ' '
<keyword> - if
<identifier> - p
<operator> - *
<operator> - ==
<punctuation> - (
<preprocessor directive> - #ifndef
<identifier> - BACKSLASH_IN_FILENAME
<identifier> - p
<operator> - |
<operator> - |
<operator> - *
<operator> - ==
<operator> - \
<operator> - \
<punctuation> - '
<punctuation> - '
<error> - #endif
<single character> - '`'
<identifier> - p
<operator> - |
<operator> - |
<operator> - *
<operator> - ==
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - retval
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - retval
<identifier> - len
<operator> - =
<operator> - \
<operator> - \
<punctuation> - [
<punctuation> - ]
<punctuation> - '
<punctuation> - '
<punctuation> - ;
<punctuation> - }
<identifier> - len
<operator> - +
<operator> - +
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - retval
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - retval
<identifier> - len
<identifier> - p
<operator> - =
<operator> - *
<punctuation> - [
<punctuation> - ]
<punctuation> - ;
<punctuation> - }
<identifier> - len
<operator> - +
<operator> - +
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - if
<identifier> - retval
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - retval
<identifier> - len
<identifier> - NUL
<operator> - =
<punctuation> - [
<punctuation> - ]
<punctuation> - ;
<keyword> - break
<punctuation> - ;
<punctuation> - }
<identifier> - retval
<identifier> - xmalloc
<identifier> - size_t
<identifier> - len
<number> - 1
<operator> - =
<operator> - +
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<keyword> - return
<identifier> - retval
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - f_argc
<identifier> - typval_T
<identifier> - argvars
<identifier> - typval_T
<identifier> - rettv
<identifier> - EvalFuncData
<identifier> - fptr
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<keyword> - if
<identifier> - argvars
<identifier> - v_type
<identifier> - VAR_UNKNOWN
<number> - 0
<operator> - ==
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - {
<identifier> - rettv
<identifier> - vval
<identifier> - v_number
<identifier> - ARGCOUNT
<operator> - -
<operator> - >
<operator> - =
<punctuation> - .
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - argvars
<identifier> - v_type
<identifier> - VAR_NUMBER
<number> - 0
<operator> - ==
<punctuation> - }
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<identifier> - tv_get_number
<identifier> - argvars
<number> - 0
<number> - 1
<operator> - &&
<operator> - &
<operator> - ==
<operator> - -
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - rettv
<identifier> - vval
<identifier> - v_number
<identifier> - GARGCOUNT
<operator> - -
<operator> - >
<operator> - =
<punctuation> - .
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - or
<identifier> - win_T
<identifier> - wp
<identifier> - find_win_by_nr__id
<identifier> - argvars
<number> - 0
<operator> - *
<operator> - =
<operator> - &
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - wp
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - rettv
<identifier> - vval
<identifier> - v_number
<identifier> - WARGCOUNT
<identifier> - wp
<operator> - -
<operator> - >
<operator> - =
<punctuation> - .
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<identifier> - rettv
<identifier> - vval
<identifier> - v_number
<number> - 1
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<punctuation> - .
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - f_argidx
<identifier> - typval_T
<identifier> - argvars
<identifier> - typval_T
<identifier> - rettv
<identifier> - EvalFuncData
<identifier> - fptr
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<identifier> - rettv
<identifier> - vval
<identifier> - v_number
<identifier> - curwin
<identifier> - w_arg_idx
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<operator> - >
<punctuation> - .
<punctuation> - ;
<punctuation> - }
<keyword> - void
<identifier> - f_arglistid
<identifier> - typval_T
<identifier> - argvars
<identifier> - typval_T
<identifier> - rettv
<identifier> - EvalFuncData
<identifier> - fptr
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<identifier> - rettv
<identifier> - vval
<identifier> - v_number
<number> - 1
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<punctuation> - .
<punctuation> - ;
<identifier> - win_T
<identifier> - wp
<identifier> - find_tabwin
<identifier> - argvars
<identifier> - argvars
<number> - 0
<number> - 1
<operator> - *
<operator> - =
<operator> - &
<operator> - &
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - ,
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - wp
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - rettv
<identifier> - vval
<identifier> - v_number
<identifier> - wp
<identifier> - w_alist
<identifier> - id
<operator> - -
<operator> - >
<operator> - =
<operator> - -
<operator> - >
<operator> - -
<operator> - >
<punctuation> - .
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<keyword> - static
<keyword> - void
<identifier> - get_arglist_as_rettv
<identifier> - aentry_T
<identifier> - arglist
<identifier> - int
<identifier> - argcount
<identifier> - typval_T
<identifier> - rettv
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<identifier> - tv_list_alloc_ret
<identifier> - rettv
<identifier> - argcount
<punctuation> - (
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - arglist
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - for
<keyword> - int
<identifier> - idx
<identifier> - idx
<identifier> - argcount
<identifier> - idx
<number> - 0
<operator> - =
<operator> - <
<operator> - +
<operator> - +
<punctuation> - (
<punctuation> - ;
<punctuation> - ;
<punctuation> - )
<punctuation> - {
<identifier> - tv_list_append_string
<identifier> - rettv
<identifier> - vval
<identifier> - v_list
<operator> - -
<operator> - >
<punctuation> - (
<punctuation> - .
<punctuation> - ,
<keyword> - const
<keyword> - char
<identifier> - alist_name
<identifier> - arglist
<identifier> - idx
<number> - 1
<operator> - *
<operator> - &
<operator> - -
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<punctuation> - }
<keyword> - void
<identifier> - f_argv
<identifier> - typval_T
<identifier> - argvars
<identifier> - typval_T
<identifier> - rettv
<identifier> - EvalFuncData
<identifier> - fptr
<operator> - *
<operator> - *
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - {
<identifier> - aentry_T
<identifier> - arglist
<identifier> - NULL
<operator> - *
<operator> - =
<punctuation> - ;
<keyword> - int
<identifier> - argcount
<number> - 1
<operator> - =
<operator> - -
<punctuation> - ;
<keyword> - if
<identifier> - argvars
<identifier> - v_type
<identifier> - VAR_UNKNOWN
<number> - 0
<operator> - ==
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - {
<identifier> - get_arglist_as_rettv
<identifier> - ARGLIST
<identifier> - ARGCOUNT
<identifier> - rettv
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - return
<punctuation> - ;
<punctuation> - }
<keyword> - if
<identifier> - argvars
<identifier> - v_type
<identifier> - VAR_UNKNOWN
<number> - 1
<operator> - ==
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<punctuation> - )
<punctuation> - {
<identifier> - arglist
<identifier> - ARGLIST
<operator> - =
<punctuation> - ;
<identifier> - argcount
<identifier> - ARGCOUNT
<operator> - =
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - argvars
<identifier> - v_type
<identifier> - VAR_NUMBER
<number> - 1
<operator> - ==
<punctuation> - }
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - .
<identifier> - tv_get_number
<identifier> - argvars
<number> - 1
<number> - 1
<operator> - &&
<operator> - &
<operator> - ==
<operator> - -
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - )
<punctuation> - {
<identifier> - arglist
<identifier> - GARGLIST
<operator> - =
<punctuation> - ;
<identifier> - argcount
<identifier> - GARGCOUNT
<operator> - =
<punctuation> - ;
<keyword> - else
<punctuation> - }
<punctuation> - {
<keyword> - or
<identifier> - win_T
<identifier> - wp
<identifier> - find_win_by_nr__id
<identifier> - argvars
<number> - 1
<operator> - *
<operator> - =
<operator> - &
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - wp
<identifier> - NULL
<operator> - !=
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - arglist
<identifier> - WARGLIST
<identifier> - wp
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<identifier> - argcount
<identifier> - WARGCOUNT
<identifier> - wp
<operator> - =
<punctuation> - (
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
<identifier> - rettv
<identifier> - v_type
<identifier> - VAR_STRING
<operator> - -
<operator> - >
<operator> - =
<punctuation> - ;
<identifier> - rettv
<identifier> - vval
<identifier> - v_string
<identifier> - NULL
<operator> - -
<operator> - >
<operator> - =
<punctuation> - .
<punctuation> - ;
<keyword> - int
<keyword> - int
<identifier> - idx
<identifier> - tv_get_number_chk
<identifier> - argvars
<identifier> - NULL
<number> - 0
<operator> - =
<operator> - &
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<keyword> - if
<identifier> - arglist
<identifier> - NULL
<identifier> - idx
<identifier> - idx
<identifier> - argcount
<number> - 0
<operator> - !=
<operator> - &&
<operator> - >=
<operator> - &&
<operator> - <
<punctuation> - (
<punctuation> - )
<punctuation> - {
<keyword> - const
<keyword> - char
<identifier> - rettv
<identifier> - vval
<identifier> - v_string
<identifier> - xstrdup
<identifier> - alist_name
<identifier> - arglist
<identifier> - idx
<operator> - -
<operator> - >
<operator> - =
<operator> - *
<operator> - &
<punctuation> - .
<punctuation> - (
<punctuation> - (
<punctuation> - )
<punctuation> - (
<punctuation> - [
<punctuation> - ]
<punctuation> - )
<punctuation> - )
<punctuation> - ;
<keyword> - else
<keyword> - if
<identifier> - idx
<number> - 1
<operator> - ==
<operator> - -
<punctuation> - }
<punctuation> - (
<punctuation> - )
<punctuation> - {
<identifier> - get_arglist_as_rettv
<identifier> - arglist
<identifier> - argcount
<identifier> - rettv
<punctuation> - (
<punctuation> - ,
<punctuation> - ,
<punctuation> - )
<punctuation> - ;
<punctuation> - }
<punctuation> - }
